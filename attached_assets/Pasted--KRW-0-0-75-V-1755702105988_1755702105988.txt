확장된 계좌 송금 환전 시스템 완전 분석 보고서
🔍 현재 자산 현황 분석
계좌 자산 현황:
KRW 계좌: 카카오뱅크 (0원), 국민은행 (0원), 하나은행 (75만원)
VND 계좌: 신한은행 (2,216만동), BIDV (120만동)
현금 자산: KRW (520만원), USD (2,673달러), VND (1억188만동)
🎯 확장된 거래 패턴 분석
사용자 요구사항을 바탕으로 4가지 주요 거래 패턴을 식별했습니다:

패턴 1: 현금 → 계좌 이체
1-A: 현금 → KRW 계좌
받는 돈: USD/VND 현금 (권종별)
주는 돈: KRW 계좌 입금 (카카오뱅크 등)
특징: 외화 현금을 받아서 원화로 환전 후 계좌 송금
1-B: 현금 → VND 계좌
받는 돈: KRW/USD 현금 (권종별)
주는 돈: VND 계좌 입금 (신한은행/BIDV)
특징: 현금을 받아서 VND로 환전 후 베트남 계좌 송금
패턴 2: 계좌 → 계좌 이체
2-A: VND 계좌 → KRW 계좌
받는 돈: VND 계좌 출금 (신한은행/BIDV)
주는 돈: KRW 계좌 입금 (카카오뱅크 등)
특징: VND→KRW 환전과 동시에 계좌 간 이체
2-B: KRW 계좌 → VND 계좌
받는 돈: KRW 계좌 출금 (하나은행 등)
주는 돈: VND 계좌 입금 (신한은행/BIDV)
특징: KRW→VND 환전과 동시에 계좌 간 이체
🏗️ 시스템 설계 요구사항
1. 거래 유형 확장 필요
현재 TRANSACTION_TYPES를 다음과 같이 확장:

- cash_to_krw_account: "현금 → KRW 계좌이체"
- cash_to_vnd_account: "현금 → VND 계좌이체" 
- vnd_account_to_krw_account: "VND 계좌 → KRW 계좌이체"
- krw_account_to_vnd_account: "KRW 계좌 → VND 계좌이체"
2. UI 로직 설계
A. 출발지 선택 로직
현금 출발: 권종별 선택 카드 활성화
계좌 출발: 계좌 선택 드롭다운 + 총액 입력
B. 목적지 선택 로직
KRW 계좌 도착: 카카오뱅크 고정 + 권종별 분배 표시
VND 계좌 도착: 신한은행/BIDV 선택 + 총액만 표시
C. 환율 적용 규칙
현금 → 계좌: 기존 환율 시스템 재사용
계좌 → 계좌: 단일 환율 적용 (권종별 차이 없음)
3. 백엔드 자산 이동 로직
A. 새로운 메서드 필요
moveAssetsCashToAccount()    // 현금 → 계좌
moveAssetsAccountToAccount() // 계좌 → 계좌
B. 자산 이동 처리
현금 자산: 권종별 감소 처리
계좌 자산: 잔액 증감만 처리 (권종 정보 없음)
환율 적용: 통화 간 변환 시
4. 데이터 호환성 고려사항
A. 권종 키 표준화
KRW: "1,000" ↔ "1000" 양방향 호환
VND: "500000" 표준 사용
계좌: 권종 정보 불필요
B. 메타데이터 구조
{
  "transactionType": "cash_to_krw_account",
  "fromAssetType": "cash",
  "toAssetType": "account", 
  "denominationAmounts": {"50000": "10"},
  "krwBreakdown": {"50,000": 5, "10,000": 3},
  "accountInfo": {
    "bankName": "카카오뱅크",
    "accountNumber": "3333-03-1258874",
    "accountHolder": "김학태"
  }
}
📊 복잡도 및 개발 우선순위
우선순위 1 (높음) - 현금 → KRW 계좌
이유: 가장 일반적인 거래 패턴
복잡도: 중간 (기존 현금 로직 + 계좌 이체)
개발 시간: 30분
우선순위 2 (중간) - VND 계좌 → KRW 계좌
이유: 베트남 송금 수취 후 원화 전환
복잡도: 낮음 (계좌 간 단순 이체)
개발 시간: 20분
우선순위 3 (중간) - 현금 → VND 계좌
이유: 베트남 송금 요구
복잡도: 중간 (VND 계좌 선택 추가)
개발 시간: 25분
우선순위 4 (낮음) - KRW 계좌 → VND 계좌
이유: 상대적으로 드문 케이스
복잡도: 낮음 (역방향 처리)
개발 시간: 20분
🔧 기술적 고려사항
1. UI 동적 표시 로직
거래유형 선택 → 출발지 타입 결정 → 도착지 타입 결정 → 환율 적용
2. 검증 로직 강화
현금 보유량: 권종별 재고 확인
계좌 잔액: 출금 가능 금액 확인
환율 유효성: 최신 환율 적용 확인
3. 수수료 및 실제 송금
실제 계좌 연동: 향후 확장 고려
수수료 계산: 은행별 수수료 적용
송금 확인: 실제 송금 완료 확인 시스템
📈 예상 전체 개발 시간
UI 확장: 40분 (4개 패턴별 로직)
백엔드 확장: 50분 (2개 신규 메서드)
테스트 및 검증: 30분 (각 패턴별)
총 개발 시간: 약 2시간
🎯 최종 권장사항
단계별 개발: 우선순위에 따라 1개씩 순차 개발
기존 코드 최대 재사용: 현금 환전 로직 활용
확장성 고려: 향후 다른 은행/통화 추가 용이하게
실제 송금 연동 준비: API 연동 인터페이스 사전 설계
결론: 시스템이 포괄적인 계좌 송금 환전 기능을 지원할 수 있도록 확장 가능하며, 단계별 개발로 안정적인 구현이 가능합니다.